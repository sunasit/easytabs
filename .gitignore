(function($){
    $.easytabs = function(container, options){
        var plugin = this,
        $container = $(container),
        default = {
            uiTabs: false,
            event: "click",
            tabActiveClass: "",
            containerClass: "",
            tabsClass: "",
            tabClass: "",
            panelClass: "",
            collapsible: false,
            defaultTab: "li:first-child",
            collapsedByDefault: true,
            animationSpeed: "Normal"
        },
        animationSpeeds = {
            fast: 200,
            normal: 400,
            slow: 600
        }
        // =============================================================
        // Functions available via easytabs object
        // =============================================================
        plugin.init = function(){
            plugin.settings = settings = $.extend({}, default, options);
            settings.bind_str = settings.event + ".easytabs";
            
            // Add jQuery UI's crazy class names to markup,
            // so that markup will match theme CSS
            if(settings.uiTabs){
                settings.tabActiveClass = 'ui-tabs-selected';
                settings.containerClass = 'ui-tabs ui-widget ui-widget-content ui-corner-all';
                settings.tabsClass = 'ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all';
                settings.tabClass = 'ui-state-default ui-corner-top';
                settings.panelClass = 'ui-tabs-panel ui-widget-content ui-corner-bottom';
            }
            
            // If collapsible is true and defaultTab specified, assume user wants defaultTab showing (not collapsed)
            if ( settings.collapsible && options.defaultTab !== undefined && options.collapsedByDefault === undefined ) {
                settings.collapsedByDefault = false;
            }
            
            // Convert 'normal', 'fast', and 'slow' animation speed settings to their respective speed in milliseconds
            if(typeof settings.animationSpeed === "string"){
                setting.animationSpeed = animationSpeeds[settings.animationSpeed];
            }
            
            // Store easytabs object on container so we can easily set
            // properties throughout
            $container.data("easytabs", {});
            
            plugin.setTransitions();
        };

        plugin.setTransitions = function(){};

        plugin.getTabs = function(){};

        plugin.selectTab = function(){};

        plugin.toggleTabCollapse = function(){};

        plugin.matchTab = function(){};

        plugin.matchInPanel = function(){};

        plugin.validId = function(){};

        plugin.selectTabFromHashChange = function(){};

        plugin.cycleTabs = function(){};

        plugin.publicMethods = function(){};

        // =============================================================
        // Private functions
        // =============================================================

        var fire = function(){};

        var addClasses = function(){};

        var setDefaultTab = function(){};

        var activateDefaultTab = function(){};

        var bindToTabClicks = function(){};

        var activateTab = function(){};

        var getHeightForHidden = function(){};

        var setAndReturnHeight = function(){};

        var initHashChange = function(){};

        var initCycle = function(){};

        plugin.init();
    };
    $.fn.easytabs = function(options){
        var args = arguments;
        return this.each(function() {
            var $this = $(this),
            plugin = $this.data('easytabs');
            if(undefined === plugin){
                plugin = new $.easytabs(this, options);
                $this.data('easytabs', plugin);
            }

            // User called public method
            if ( plugin.publicMethods[options] ){
                return plugin.publicMethods[options](Array.prototype.slice.call( args, 1 ));
            }
        });
    }
}(jQuery));
