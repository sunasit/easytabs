(function($){
    $.easytabs = function(container, options){
        var plugin = this,
        $container = $(container),
        default = {
            uiTabs: false,
            event: "click",
            tabActiveClass: "",
            containerClass: "",
            tabsClass: "",
            tabClass: "",
            panelClass: "",
            collapsible: false,
            defaultTab: "li:first-child",
            collapsedByDefault: true,
            animationSpeed: "Normal"，
            tabs: "> ul > li",
            panelContext: $container,
            cycle: false
        },
        animationSpeeds = {
            fast: 200,
            normal: 400,
            slow: 600
        },
        $defaultTab, //default selected tab
        settings;
        // =============================================================
        // Functions available via easytabs object
        // =============================================================
        plugin.init = function(){
            plugin.settings = settings = $.extend({}, default, options);
            settings.bind_str = settings.event + ".easytabs";
            
            // Add jQuery UI's crazy class names to markup,
            // so that markup will match theme CSS
            if(settings.uiTabs){
                settings.tabActiveClass = 'ui-tabs-selected';
                settings.containerClass = 'ui-tabs ui-widget ui-widget-content ui-corner-all';
                settings.tabsClass = 'ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all';
                settings.tabClass = 'ui-state-default ui-corner-top';
                settings.panelClass = 'ui-tabs-panel ui-widget-content ui-corner-bottom';
            }
            
            // If collapsible is true and defaultTab specified, assume user wants defaultTab showing (not collapsed)
            if ( settings.collapsible && options.defaultTab !== undefined && options.collapsedByDefault === undefined ) {
                settings.collapsedByDefault = false;
            }
            
            // Convert 'normal', 'fast', and 'slow' animation speed settings to their respective speed in milliseconds
            if(typeof settings.animationSpeed === "string"){
                setting.animationSpeed = animationSpeeds[settings.animationSpeed];
            }
            
            // Store easytabs object on container so we can easily set
            // properties throughout
            $container.data("easytabs", {});
            
            plugin.setTransitions();
        };

        plugin.setTransitions = function(){};

        plugin.getTabs = function(){
            //声明一个变量用于匹配tab的target
            var $matchingPanel;
            //$(elem).find("> ul > li")
            plugin.tabs = $container.find(settings.tabs),
            //遍历tab
            plugin.tabs.each(function(){
                //查找每个tab中a标签的href
                var $tab = $(this),
                    $a = $tab.children('a'),
                    targetId = $tab.children('a').data('target');
                
                $tab.data('easytabs', {});
                if ( targetId !== undefined && targetId !== null ) {
                    $tab.data('easytabs').ajax = $a.attr('href');
                } else {
                    targetId = $a.attr('href');
                }
                //正则匹配，查找匹配的target panel元素，匹配包括#，不包括？的全部字串
                targetId = targetId.match(/#([^\?]+)/)[1];
                $matchingPanel = settings.panelContext.find("#" + targetId);
                
                if ( $matchingPanel.length ) {

                    // Store panel height before hiding
                    $matchingPanel.data('easytabs', {
                        position: $matchingPanel.css('position'),
                        visibility: $matchingPanel.css('visibility')
                    });

                    // Don't hide panel if it's active (allows `getTabs` to be called manually to re-instantiate tab collection)
                    $matchingPanel.not(settings.panelActiveClass).hide();
                    plugin.panels = plugin.panels.add($matchingPanel);
                    $tab.data('easytabs').panel = $matchingPanel;
                    // Otherwise, remove tab from tabs collection
                } else {
                    plugin.tabs = plugin.tabs.not($tab);
                    if ('console' in window) {
                        console.warn('Warning: tab without matching panel for selector \'#' + targetId +'\' removed from set');
                    }
                }
            });
        });
        
        
        
        // Don't hide panel if it's active (allows `getTabs` to be called manually to re-instantiate tab collection)
        
        // Otherwise, remove tab from tabs collection
        };

        plugin.selectTab = function(){};

        plugin.toggleTabCollapse = function(){};

        plugin.matchTab = function(hash){
            return plugin.tabs.find("[href='" + hash + "'],[data-target='" + hash + "']").first();
        };

        plugin.matchInPanel = function(hash){
            //校验window.location.hash，并返回匹配的panel
            return ( hash && plugin.validId(hash) ? plugin.panels.filter(':has(' + hash + ')').first() : [] );
        };

        plugin.validId = function(){};

        plugin.selectTabFromHashChange = function(){};

        plugin.cycleTabs = function(){};

        plugin.publicMethods = function(){};

        // =============================================================
        // Private functions
        // =============================================================

        var fire = function(){};

        //给tabs/tab/panel/container添加class，init方法调用
        var addClasses = function(){
            $container.addClass(settings.containerClass);
            plugin.tabs.parent().addClass(settings.tabsClass);
            plugin.tabs.addClass(settings.tabClass);
            plugin.panels.addClass(settings.panelClass);
        };

        var setDefaultTab = function(){
            //从javascript的内置对象location的hash中匹配参数,hash存放的是url中#后面的内容，即锚
            var hash = window.location.hash.match(/^[^\?]*/)[0],
            //调用match方法定位到参数所在的tab
            $selectedTab = plugin.matchTab(hash).parent(),
            $panel;
            
            if( $selectedTab.length === 1 ){
                $defaultTab = $selectedTab;
                settings.cycle = false;
            }else{
                $panel = plugin.matchInPanel(hash);
                if($panel.length){
                    hash = '#' + $panel.attr('id');
                }else{
                
                }
            }
        };

        var activateDefaultTab = function(){};

        var bindToTabClicks = function(){};

        var activateTab = function(){};

        var getHeightForHidden = function(){};

        var setAndReturnHeight = function(){};

        var initHashChange = function(){};

        var initCycle = function(){};

        plugin.init();
    };
    $.fn.easytabs = function(options){
        var args = arguments;
        return this.each(function() {
            var $this = $(this),
            plugin = $this.data('easytabs');
            if(undefined === plugin){
                plugin = new $.easytabs(this, options);
                $this.data('easytabs', plugin);
            }

            // User called public method
            if ( plugin.publicMethods[options] ){
                return plugin.publicMethods[options](Array.prototype.slice.call( args, 1 ));
            }
        });
    }
}(jQuery));
